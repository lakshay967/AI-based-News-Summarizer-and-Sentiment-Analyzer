{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>SnapNews</title>
  <link rel="stylesheet" href="{% static 'css/style.css' %}">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="refresh" content="60">

  <style>
    /* General Reset & Layout */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: #f4f4f4;
      color: #333;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding-top: 100px;
      transition: background 0.3s ease;
    }

    body.dark-mode {
      background-color: #121212;
      color: white;
    }

    /* Navbar */
    .navbar {
      position: fixed;
      top: 0;
      width: 100%;
      background: linear-gradient(to right, #008cff, #005577);
      color: white;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px 40px;
      z-index: 1000;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }

    .logo {
      font-size: 28px;
      font-weight: bold;
      animation: slideIn 1s ease-in-out;
    }

    @keyframes slideIn {
      from { transform: translateX(-100px); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }

    #toggle-dark-mode {
      background: transparent;
      border: 2px solid white;
      color: white;
      padding: 8px 16px;
      border-radius: 20px;
      cursor: pointer;
      transition: 0.3s;
    }
    #toggle-dark-mode:hover {
      background: rgba(255,255,255,0.2);
    }

    /* Search */
    .search-section {
      margin-top: 30px;
      text-align: center;
    }

    .search-box {
      width: 50%;
      padding: 14px 20px;
      border-radius: 30px;
      border: none;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }

    .search-btn {
      padding: 14px 20px;
      margin-left: 10px;
      background-color: #008cff;
      color: white;
      border: none;
      border-radius: 30px;
      cursor: pointer;
      transition: background 0.3s ease;
      
    }

    .search-btn:hover {
      background-color: #0070cc;
    }

    /* Dropdown */
    .dropdown-container {
      margin: 20px 0;
    }
    .styled-dropdown {
      padding: 12px 18px;
      font-size: 16px;
      border: none;
      border-radius: 30px;
      background: #333;
      color: white;
      width: 250px;
      appearance: none;
      background-image: url("data:image/svg+xml;utf8,<svg fill='white' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/></svg>");
      background-repeat: no-repeat;
      background-position: right 14px center;
      background-size: 18px;
    }

    /* News Cards */
    .news-container {
      max-width: 900px;
      display: flex;
      flex-direction: column;
      gap: 30px;
      width: 100%;
      padding: 20px;
    }

    .article {
      background-color: #ffffff;
      border-radius: 20px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
      padding: 20px;
      transition: transform 0.3s;
    }

    .article:hover {
      transform: translateY(-5px);
    }

    .dark-mode .article {
      background-color: #2a2a2a;
      color: white;
    }

    .article img {
      width: 100%;
      height: auto;
      border-radius: 15px;
      margin-bottom: 15px;
    }

    .summaryBtn {
      padding: 10px 18px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 30px;
      cursor: pointer;
      font-size: 15px;
      margin-top: 10px;
    }

    .summaryDisplay {
      margin-top: 10px;
      font-size: 15px;
      line-height: 1.6;
    }

    .predict-btn {
      padding: 10px 18px;
      background-color: #ff6600;
      color: white;
      border: none;
      border-radius: 30px;
      cursor: pointer;
      margin-top: 10px;
    }

    .prediction-result {
      margin-top: 10px;
    }
/* ---------------------------------- */
/* Default: Light mode */
.summaryDisplay {
  font-size: 16px;
  color: #000000;       /* Black text in light mode */
  line-height: 1.6;
}

/* Override for Dark Mode */
body.dark-mode .summaryDisplay {
  color: #ffffff;       /* White text in dark mode */
}


    .article, .news-card {
  background-color: #ffffff;
  border-radius: 20px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.9); /* Light mode shadow */
  padding: 20px;
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}


    body.dark-mode .article,
body.dark-mode .news-card {
  background-color: #1e1e1e;
  color: white;
  box-shadow: 0 4px 20px rgba(255, 255, 255, 0.9); /* White shadow */
}
/* ------------------------------- */

    /* Footer */
    footer {
      text-align: center;
      margin-top: 60px;
      padding: 20px;
      width: 101.5%;
      background-color: #333;
      color: white;
    }
  </style>
</head>

<body>
  <div class="navbar">
    <div class="logo">SnapNews</div>
    <button id="toggle-dark-mode">üåô Dark Mode</button>
  </div>

  <form method="get" action="/" class="search-section">
    <input type="text" name="query" placeholder="Search news..." class="search-box" value="{{ query|default:'' }}">
    <button type="submit" class="search-btn">Search</button>
  </form>

  <div class="dropdown-container">
    <select class="styled-dropdown" id="genre-select" onchange="filterByGenre()">
      <option value="">All</option>
      <option value="Sports" {% if request.GET.genre == "Sports" %}selected{% endif %}>Sports</option>
      <option value="Politics" {% if request.GET.genre == "Politics" %}selected{% endif %}>Politics</option>
      <option value="Technology" {% if request.GET.genre == "Technology" %}selected{% endif %}>Technology</option>
      <option value="Entertainment" {% if request.GET.genre == "Entertainment" %}selected{% endif %}>Entertainment</option>
      <option value="Business" {% if request.GET.genre == "Business" %}selected{% endif %}>Business</option>
      <option value="Health" {% if request.GET.genre == "Health" %}selected{% endif %}>Health</option>
      <option value="Science" {% if request.GET.genre == "Science" %}selected{% endif %}>Science</option>
    </select>
  </div>

  <div class="news-container">
    {% for article in articles %}
    <div class="article">
      {% if article.urlToImage %}
      <img src="{{ article.urlToImage }}" alt="News Image">
      {% endif %}
      <h2>{{ article.title }}</h2>
      <p>{{ article.description }}</p>

      <button class="summaryBtn">Show Summary</button>
      <p><strong>Summary:</strong> <span class="summaryDisplay"></span></p>
      <input type="hidden" class="hiddenSummary" value="{{ article.summary }}">

      <form class="predict-form">
        <input type="hidden" name="news_text" value="{{ article.title }}">
        <button type="submit" class="predict-btn">Predict</button>
      </form>
      <p class="prediction-result"></p>
    </div>
    {% empty %}
    <p>No articles found.</p>
    {% endfor %}
  </div>

  <footer>
    &copy; 2025 SnapNews | Built with ‚ù§Ô∏è and AI
  </footer>

  <script>
    function getCookie(name) {
      let cookieValue = null;
      if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
          const cookie = cookies[i].trim();
          if (cookie.substring(0, name.length + 1) === (name + '=')) {
            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
            break;
          }
        }
      }
      return cookieValue;
    }

    document.addEventListener('DOMContentLoaded', function () {
      const forms = document.querySelectorAll('.predict-form');

      forms.forEach(form => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();
          const btn = form.querySelector('.predict-btn');
          const result = form.nextElementSibling;
          const text = form.querySelector('input[name="news_text"]').value;

          btn.disabled = true;
          btn.innerText = 'Predicting...';
          result.classList.remove('show');
          result.textContent = '';

          fetch('/predict-ajax/', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRFToken': getCookie('csrftoken')
            },
            body: JSON.stringify({ text: text })
          })
            .then(res => res.json())
            .then(data => {
              if (data.sentiment) {
                const color = data.sentiment === 'Positive' ? 'green' : data.sentiment === 'Negative' ? 'red' : 'gray';
                result.innerHTML = `<strong>Sentiment:</strong> <span style="color: ${color};">${data.sentiment}</span>`;
              } else {
                result.textContent = 'Error predicting.';
              }
              result.classList.add('show');
            })
            .catch(() => result.textContent = 'Error.')
            .finally(() => {
              btn.disabled = false;
              btn.innerText = 'Predict';
            });
        });
      });

      // Summary typing
      const summaryButtons = document.querySelectorAll(".summaryBtn");
      summaryButtons.forEach(btn => {
        btn.addEventListener("click", function () {
          const article = btn.closest(".article");
          const summary = article.querySelector(".hiddenSummary").value;
          const display = article.querySelector(".summaryDisplay");
          display.textContent = "";
          let i = 0;
          const interval = setInterval(() => {
            display.textContent += summary.charAt(i++);
            if (i >= summary.length) clearInterval(interval);
          }, 20);
        });
      });

      // Dark mode
      const toggleButton = document.getElementById('toggle-dark-mode');
      if (localStorage.getItem('dark-mode') === 'enabled') {
        document.body.classList.add('dark-mode');
        toggleButton.textContent = '‚òÄÔ∏è Light Mode';
      }
      toggleButton.addEventListener('click', function () {
        document.body.classList.toggle('dark-mode');
        if (document.body.classList.contains('dark-mode')) {
          toggleButton.textContent = '‚òÄÔ∏è Light Mode';
          localStorage.setItem('dark-mode', 'enabled');
        } else {
          toggleButton.textContent = 'üåô Dark Mode';
          localStorage.setItem('dark-mode', 'disabled');
        }
      });
    });

    function filterByGenre() {
      const genre = document.getElementById("genre-select").value;
      const query = new URLSearchParams(window.location.search).get("query") || "";
      const url = genre ? `/?genre=${genre}&query=${query}` : `/?query=${query}`;
      window.location.href = url;
    }
  </script>
</body>
</html>
